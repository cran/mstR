        **************************************************
        *                                                *
        *  Changes and Developments in the mstR Package  *
        *                                                *
        **************************************************


------------------------------------
- Changes in mstR 1.2 (2018-03-30) -
------------------------------------

MAJOR UPDATES

  o  The nextItem() function returns an additional output 
     argument, called $best.module, which is TRUE if the
     optimal module is returned or FALSE if another
     module was chosen (by the 'randomesque' argument).

  o  The randomMST() and print.mst() function were updated
     to display this new outout value.

  o  The randomMST() help file was updated to remove some
     problematic code when generating an output figure.



MINOR UPDATES

  o  Some typos were fixed.




------------------------------------
- Changes in mstR 1.1 (2018-03-23) -
------------------------------------

MAJOR UPDATES

  o  The specification of the matrix of cut-off scores was 
     modified to simplify the definition of the selection
     thresholds. This modification also solved a problem of
     module selection that appeared in some specific MST
     designs and extreme response scores. Many thanks to
     Yuan-Ling (Linda) Liaw (CEMO, Oslo, Norway; 
     y.l.liaw@cemo.uio.no) for noticig this issue.

  o  The plot.mst() function allows now to represent the MST
     structure as a graph just by providing the transition
     matrix (and not the output of randomMST() function). 

  o  The 'randomesque' option was added to the nextModule()
     function. 'randomesque' takes a probability value 
     between zero and one; the optimal module is chosen with
     probability 'randomesque' and other elligible modules in
     the stage are chosen with probability (1-'randomesque')
     divided by the nimber of other (non-optimal) modules.
     This is to control module overexposure in a similar 
     fashion to the CAT context.

  o  The 'score.range' argument was added to the 'test' list
     of randomMST() function. It determines on the basis of 
     which module(s) must the provisional test score be
     computed, either on all previously administered modules
     ("all") or on the last module only ("last").

  o  Functions testListMST() and randomMST() were updated 
     accordingly.



MINOR UPDATES

  o  Main author's affiliation and email address was 
     updated.

  o  Some typos were fixed.



